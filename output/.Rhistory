df <- read.csv("df5.csv")
df
i <- 1
revgeocode(as.numeric(c(df$Longitude[i], df$Latitude[i])), output="more")$postal_code
library(ggplot2)
library(ggmap)
revgeocode(as.numeric(c(df$Longitude[i], df$Latitude[i])), output="more")$postal_code
as.numeric(c(df$Longitude[i], df$Latitude[i])
)
revgeocode(as.numeric(c(-73.95837,40.71824)), output="more")
isEmpty <- function(x){
return(identical(x, numeric(0)))
}
x <- 1
isEmpty(x)
zipcode <- c()
for(i in 1:nrow(df)){
zip <- revgeocode(as.numeric(c(df$Longitude[i],df$Latitude[i])), output= 'more')$postal_code
zip <- as.numeric(as.character(zip))
if(isEmpty(zip)) zip = 1
zipcode <- c(zipcode, zip)
}
i <- 1
zip <- revgeocode(as.numeric(c(df$Longitude[i],df$Latitude[i])), output= 'more')$postal_code
zip
isEmpty <- function(x){
return(identical(x, numeric(0)))
}
df <- read.csv("df5.csv")
zipcode <- c()
for(i in 1:nrow(df)){
zip <- revgeocode(as.numeric(c(df$Longitude[i],df$Latitude[i])), output= 'more')$postal_code
zip <- as.numeric(as.character(zip))
if(isEmpty(zip)) zip = 1
zipcode <- c(zipcode, zip)
}
df$Zipcode <- zipcode
for(i in which(df$Zipcode == 1)){
zip <- revgeocode(as.numeric(c(df$Longitude[i],df$Latitude[i])), output= 'more')$postal_code
zip <- as.numeric(as.character(zip))
if(isEmpty(zip)) zip = 1
df$Zipcode[i] <- zip
}
View(df)
zip
zipcode
df$Zipcode <- zipcode
length(zipcode)
setwd("C:/Users/dingx/Desktop")
list.files()
df <- read.csv("movie_theatres.dxy.csv")
View(df)
i <- 1
zip <- revgeocode(as.numeric(c(df$Longitude[i],df$Latitude[i])), output= 'more')$postal_code
df$Zip[i] <- as.numeric(as.character(zip))
df$Zip[i]
zipcode <- c()
for(i in 1:nrow(df)){
zip <- revgeocode(as.numeric(c(df$Longitude[i],df$Latitude[i])), output= 'more')$postal_code
df$Zip[i] <- as.numeric(as.character(zip))
}
for(i in 2:nrow(df)){
zip <- revgeocode(as.numeric(c(df$Longitude[i],df$Latitude[i])), output= 'more')$postal_code
df$Zip[i] <- as.numeric(as.character(zip))
}
i < -2
i
i <- 2
zip <- revgeocode(as.numeric(c(df$Longitude[i],df$Latitude[i])), output= 'more')$postal_code
df$Zip[i] <- as.numeric(as.character(zip))
i <- 3
zip <- revgeocode(as.numeric(c(df$Longitude[i],df$Latitude[i])), output= 'more')$postal_code
df$Zip[i] <- as.numeric(as.character(zip))
for(i in 4:nrow(df)){
zip <- revgeocode(as.numeric(c(df$Longitude[i],df$Latitude[i])), output= 'more')$postal_code
df$Zip[i] <- as.numeric(as.character(zip))
}
i <-4
zip <- revgeocode(as.numeric(c(df$Longitude[i],df$Latitude[i])), output= 'more')$postal_code
df$Zip[i] <- as.numeric(as.character(zip))
zip
i <- 5
zip <- revgeocode(as.numeric(c(df$Longitude[i],df$Latitude[i])), output= 'more')$postal_code
df$Zip[i] <- as.numeric(as.character(zip))
for(i in 4:nrow(df)){
zip <- revgeocode(as.numeric(c(df$Longitude[i],df$Latitude[i])), output= 'more')$postal_code
df$Zip[i] <- zip
}
i <- 4
zip <- revgeocode(as.numeric(c(df$Longitude[i],df$Latitude[i])), output= 'more')$postal_code
df$Zip[i] <- zip
i <- 5
zip <- revgeocode(as.numeric(c(df$Longitude[i],df$Latitude[i])), output= 'more')$postal_code
df$Zip[i] <- zip
i <- 6
zip <- revgeocode(as.numeric(c(df$Longitude[i],df$Latitude[i])), output= 'more')$postal_code
df$Zip[i] <- zip
i <- 7
zip <- revgeocode(as.numeric(c(df$Longitude[i],df$Latitude[i])), output= 'more')$postal_code
df$Zip[i] <- zip
i <- 2
zip <- revgeocode(as.numeric(c(df$Longitude[i],df$Latitude[i])), output= 'more')$postal_code
df$Zip[i] <- zip
i
revgeocode(as.numeric(c(df$Longitude[i],df$Latitude[i])), output= 'more')$postal_code
i <- 7
revgeocode(as.numeric(c(df$Longitude[i],df$Latitude[i])), output= 'more')$postal_code
i <- 80
revgeocode(as.numeric(c(df$Longitude[i],df$Latitude[i])), output= 'more')$postal_code
setwd("C:/Users/dingx/Desktop/run")
library('ggplot2')
library('ggmap')
df <- read.csv("df5.csv")
isEmpty <- function(x){
return(identical(x, numeric(0)))
}
zipcode <- c()
for(i in 1:nrow(df)){
zip <- revgeocode(as.numeric(c(df$Longitude[i],df$Latitude[i])), output= 'more')$postal_code
zip <- as.numeric(as.character(zip))
if(isEmpty(zip)) zip = 1
zipcode <- c(zipcode, zip)
}
shiny::runApp('~/GitHub/Spring2018-Project2-group3/app')
runApp('~/GitHub/Spring2018-Project2-group3/app')
install.packages("choroplethr")
runApp('~/GitHub/Spring2018-Project2-group3/app')
library(choroplethr)
install.packages("choroplethrZip")
library(choroplethrZip)
??choroplethrZip
?choroplethrZip
runApp('~/GitHub/Spring2018-Project2-group3/app')
runApp('~/GitHub/Spring2018-Project2-group3/app')
runApp('~/GitHub/Spring2018-Project2-group3/app')
runApp('~/GitHub/Spring2018-Project2-group3/app')
install.packages("choroplethrZip")
library(choroplethrZip)
packageurl <- "http://cran.r-project.org/src/contrib/Archive/choroplethrZip/choroplethrZip_1.5.0.tar.gz"
install.packages(packageurl, contriburl=NULL, type="source")
runApp('~/GitHub/Spring2018-Project2-group3/app')
packageurl <- "http://cran.r-project.org/src/contrib/Archive/choroplethrZip/choroplethrZip_1.3.0.tar.gz";install.packages(packageurl, contriburl=NULL, type="source")
packageurl <- "http://cran.r-project.org/src/contrib/Archive/choroplethrZip/choroplethrZip_1.2.2.tar.gz";install.packages(packageurl, contriburl=NULL, type="source")
packageurl <- "http://cran.r-project.org/src/contrib/Archive/choroplethrZip/choroplethrZip_1.1.0.tar.gz";install.packages(packageurl, contriburl=NULL, type="source")
packageurl <- "http://cran.r-project.org/src/contrib/Archive/choroplethrZip/choroplethrZip_1.0.0.tar.gz";install.packages(packageurl, contriburl=NULL, type="source")
runApp('~/GitHub/Spring2018-Project2-group3/app')
runApp('~/GitHub/Spring2018-Project2-group3/app')
runApp('~/GitHub/Spring2018-Project2-group3/app')
setwd("C:/Users/dingx/Downloads")
list.files()
titanic <- read.table
("Titanic.txt", header = TRUE, as.is = TRUE)
titanic <- read.table("Titanic.txt", header = TRUE, as.is = TRUE)
Survived.Word <-ifelse(titanic$"Survived"==1, "survived", "died")
dim(titanic[titanic$Sex == "female",])
dim(titanic[titanic$Sex == "male",])
314/342
dim(titanic[titanic$Survived == "1",])
i <- 1
titanic[titanic$Pclass == i ,]/titanic[titanic$Pclass == i & titanic$Survived == 1,]
nrow(titanic[titanic$Pclass == i ,])/nrow(titanic[titanic$Pclass == i & titanic$Survived == 1,])
nrow(titanic[titanic$Pclass == i & titanic$Survived == 1,])/nrow(titanic[titanic$Pclass == i ,])
nrow(titanic[titanic$Pclass == i ,])
View(titanic)
survive_char <- ifelse(titanic[,2] == 0,"died","survived")
survive_char[1] <- "dfd"
head(survive_char)
titanic$Survived,word <- survive_char
titanic$Survived.word <- survive_char
setwd("C:/Users/dingx/Desktop/run")
setwd("~/GitHub/Spring2018-Project2-group3/output/Resturant")
list.files()
setwd("~/GitHub/Spring2018-Project2-group3/output")
list.files()
library('ggplot2')
library('ggmap')
df <- read.csv("movie_theatres.dxy.csv")
df <- read.csv("movie_theatres.dxy.csv")
View(df)
df <- read.csv("movie_theatres.dxy.csv")
df <- read.csv("movie_theatres.dxy.csv")
library(ggplot2)
library(ggmap)
# df <- read.csv("df5.csv")
df$zip <- NULL
for(i in 1: nrow(df)){
df$zip[i] <- revgeocode(as.numeric(c(df$Longitude[i],
df$Latitude[i])),output="more")$postal_code
}
isEmpty <- function(x){
return(identical(x, numeric(0)))
}
df$zip <- NULL
for(i in 1: nrow(df)){
zip <- revgeocode(as.numeric(c(df$Longitude[i],df$Latitude[i])),output="more")$postal_code
if (isEmpty(zip)) zip = 1
df$zip[i] = zip
}
df$zip <- NULL
View(df)
View(df)
zipcode <- c()
for(i in 1: nrow(df)){
zip <- revgeocode(as.numeric(c(df$Longitude[i],df$Latitude[i])),output="more")$postal_code
if (isEmpty(zip)) zip = 1
zipcode <- c(zipcode,zip)
}
zipcode
revgeocode(as.numeric(c(df$Longitude[i],df$Latitude[i])),output="more")$postal_codel
library(plyr)
?plyr
market <- read.csv("../data/Liquor_Authority_Quarterly_List_of_Active_Licenses.csv")
View(market)
market <- read.csv("../data/Liquor_Authority_Quarterly_List_of_Active_Licenses.csv")
market <- market[market$County.Name..Licensee. == "NEW YORK",]
market <- market[market$License.Type.Name == "DRUG BEER, WINE PROD" |
market$License.Type.Name == "DRUG CHAIN, BEER ONLY" |
market$License.Type.Name == "DRUG CHAIN, WINE PROD" |
market$License.Type.Name == "DRUG STORE BEER" |
market$License.Type.Name == "GROCERY BEER, WINE PROD" |
market$License.Type.Name == "GROCERY CHAIN, BEER ONLY" |
market$License.Type.Name == "GROCERY CHAIN, WINE PROD" |
market$License.Type.Name == "GROCERY STORE BEER",]
market <- market[,c("Premises.Name","Actual.Address.of.Premises..Address1.","Zip",
"Latitude","Longitude","License.Type.Name")]
rownames(market) <- NULL
market$Zip <- substr(market$Zip,1,5)
colnames(market)[1:2] <- c("Name","Address")
market$Address <- paste0(market$Address,", New York, NY")
unique(market$License.Type.Name)
substr("dfd",1,1)
for(i in 1:nrow(market)){
first_c <- substr(as.character(market$License.Type.Name[i]),1,1)
market$License.Type.Name[i] <- ifelse(first_c == "G","Grocery","Pharmacy")
}
i <- 1
substr(as.character(market$License.Type.Name[i]),1,1)
as.character(market$License.Type.Name[i])
market$License.Type.Name[i]
market$License.Type.Name <- as.character(market$License.Type.Name)
market$License.Type.Name[i]
market <- read.csv("../data/Liquor_Authority_Quarterly_List_of_Active_Licenses.csv")
market <- market[market$County.Name..Licensee. == "NEW YORK",]
market <- market[market$License.Type.Name == "DRUG BEER, WINE PROD" |
market$License.Type.Name == "DRUG CHAIN, BEER ONLY" |
market$License.Type.Name == "DRUG CHAIN, WINE PROD" |
market$License.Type.Name == "DRUG STORE BEER" |
market$License.Type.Name == "GROCERY BEER, WINE PROD" |
market$License.Type.Name == "GROCERY CHAIN, BEER ONLY" |
market$License.Type.Name == "GROCERY CHAIN, WINE PROD" |
market$License.Type.Name == "GROCERY STORE BEER",]
market <- market[,c("Premises.Name","Actual.Address.of.Premises..Address1.","Zip",
"Latitude","Longitude","License.Type.Name")]
rownames(market) <- NULL
market$Zip <- substr(market$Zip,1,5)
colnames(market)[1:2] <- c("Name","Address")
market$Address <- paste0(market$Address,", New York, NY")
market$License.Type.Name[i]
as.character(market$License.Type.Name[i])
for(i in 1:nrow(market)){
first_c <- substr(as.character(market$License.Type.Name[i]),1,1)
market$License.Type.Name[i] <- ifelse(first_c == "G","Grocery","Pharmacy")
}
market <- read.csv("../data/Liquor_Authority_Quarterly_List_of_Active_Licenses.csv")
market <- market[market$County.Name..Licensee. == "NEW YORK",]
market <- market[market$License.Type.Name == "DRUG BEER, WINE PROD" |
market$License.Type.Name == "DRUG CHAIN, BEER ONLY" |
market$License.Type.Name == "DRUG CHAIN, WINE PROD" |
market$License.Type.Name == "DRUG STORE BEER" |
market$License.Type.Name == "GROCERY BEER, WINE PROD" |
market$License.Type.Name == "GROCERY CHAIN, BEER ONLY" |
market$License.Type.Name == "GROCERY CHAIN, WINE PROD" |
market$License.Type.Name == "GROCERY STORE BEER",]
market <- market[,c("Premises.Name","Actual.Address.of.Premises..Address1.","Zip",
"Latitude","Longitude","License.Type.Name")]
rownames(market) <- NULL
market$Zip <- substr(market$Zip,1,5)
colnames(market)[1:2] <- c("Name","Address")
market$Address <- paste0(market$Address,", New York, NY")
market$Type <- as.character(market$License.Type.Name)
i <-1
i
substr(as.character(market$License.Type.Name[i]),1,1)
first_c <- substr(as.character(market$License.Type.Name[i]),1,1)
first_c
market$Type[i] <- ifelse(first_c == "G","Grocery","Pharmacy")
market$Type[i]
market$Type <- rep(NA,nrow(market))
for(i in 1:nrow(market)){
first_c <- substr(as.character(market$License.Type.Name[i]),1,1)
market$Type[i] <- ifelse(first_c == "G","Grocery","Pharmacy")
}
unique(market$Type)
market <- market[,-6]
write.csv(market,"market.dxy.csv")
View(market)
library(plyr)
library(plyr)
market %>% group_by(Type)
market <- market %>% group_by(Type)
library(dplyr)
market <- market %>% group_by(Type)
market <- read.csv("../data/Liquor_Authority_Quarterly_List_of_Active_Licenses.csv")
market <- market[market$County.Name..Licensee. == "NEW YORK",]
market <- market[market$License.Type.Name == "DRUG BEER, WINE PROD" |
market$License.Type.Name == "DRUG CHAIN, BEER ONLY" |
market$License.Type.Name == "DRUG CHAIN, WINE PROD" |
market$License.Type.Name == "DRUG STORE BEER" |
market$License.Type.Name == "GROCERY BEER, WINE PROD" |
market$License.Type.Name == "GROCERY CHAIN, BEER ONLY" |
market$License.Type.Name == "GROCERY CHAIN, WINE PROD" |
market$License.Type.Name == "GROCERY STORE BEER",]
market <- market[,c("Premises.Name","Actual.Address.of.Premises..Address1.","Zip",
"Latitude","Longitude","License.Type.Name")]
rownames(market) <- NULL
market$Zip <- substr(market$Zip,1,5)
colnames(market)[1:2] <- c("Name","Address")
market$Address <- paste0(market$Address,", New York, NY")
market$Type <- rep(NA,nrow(market))
for(i in 1:nrow(market)){
first_c <- substr(as.character(market$License.Type.Name[i]),1,1)
market$Type[i] <- ifelse(first_c == "G","Grocery","Pharmacy")
}
market <- market[,-6]
#get latitude and longitude
library(ggmap)
for(i in 1:nrow(movie))
{
result <- geocode(movie$Address[i], output = "latlona", source = c("google", "dsk"))
movie$Longitude[i] <- as.numeric(result[1])
movie$Latitude[i] <- as.numeric(result[2])
}
na <- unique(c(which(is.na(market$Latitude)),which(is.na(market$Longitude))))
for(i in na){
result <- geocode(market$Address[i], output = "latlona", source = c("google", "dsk"))
movie$Longitude[i] <- as.numeric(result[1])
movie$Latitude[i] <- as.numeric(result[2])
}
na <- unique(c(which(is.na(market$Latitude)),which(is.na(market$Longitude))))
for(i in na){
result <- geocode(market$Address[i], output = "latlona", source = c("google", "dsk"))
market$Longitude[i] <- as.numeric(result[1])
market$Latitude[i] <- as.numeric(result[2])
}
na <- unique(c(which(is.na(market$Latitude)),which(is.na(market$Longitude))))
na
for(i in na){
result <- geocode(market$Address[i], output = "latlona", source = c("google", "dsk"))
market$Longitude[i] <- as.numeric(result[1])
market$Latitude[i] <- as.numeric(result[2])
}
na <- unique(c(which(is.na(market$Latitude)),which(is.na(market$Longitude))))
na
is.na(market$Latitude)
write.csv(market,"market.dxy.csv")
na <- unique(c(which(market$Latitude == 0),which(market$Longitude == 0)))
na
for(i in na){
result <- geocode(market$Address[i], output = "latlona", source = c("google", "dsk"))
market$Longitude[i] <- as.numeric(result[1])
market$Latitude[i] <- as.numeric(result[2])
}
na <- unique(c(which(market$Latitude == 0),which(market$Longitude == 0)))
na
write.csv(market,"market.dxy.csv")
na <- unique(c(which(is.na(market$Latitude)),which(is.na(market$Longitude))))
na
for(i in na){
result <- geocode(market$Address[i], output = "latlona", source = c("google", "dsk"))
market$Longitude[i] <- as.numeric(result[1])
market$Latitude[i] <- as.numeric(result[2])
}
na <- unique(c(which(is.na(market$Latitude)),which(is.na(market$Longitude))))
na
for(i in na){
result <- geocode(market$Address[i], output = "latlona", source = c("google", "dsk"))
market$Longitude[i] <- as.numeric(result[1])
market$Latitude[i] <- as.numeric(result[2])
}
na <- unique(c(which(is.na(market$Latitude)),which(is.na(market$Longitude))))
na
maret <- read.csv("../output/market.dxy.csv")
View(maret)
na <- unique(c(which(is.na(market$Latitude)),which(is.na(market$Longitude))))
na
market[69,]
setwd("~/GitHub/Spring2018-Project2-group3/output")
list.files()
market <- read.csv("market.dxy.csv" )
market[69,]
unique(c(which(is.na(market$Latitude)),which(is.na(market$Longitude))))
nique(c(which(market$Latitude == 0),which(market$Longitude == 0)))
unique(c(which(market$Latitude == 0),which(market$Longitude == 0)))
market <- market %>% group_by(Type)
market <- market %>% group_by(Type,Zip)
market <- read.csv("market.dxy.csv")
market <- market %>% group_by(Type,Zip)
rm(maret)
View(market)
market <- market %>% group_by(Zip,Type)
setwd("~/GitHub/Spring2018-Project2-group3/output")
df <- read.csv("movie_theatres.dxy.csv")
View(df)
class(df$Latitude)
class(df$Longitude)
?ldply
market1 <- split(market,as.factor(market$Zip))
class(market1)
head(market1)
market2 <- ldply(market1,count)
class(market2)
View(market2)
?ddply
market3 <- ddply(market2,Type,sort)
market2 = mark
market2 = market2[order(market2$n), ]
View(market1)
View(market2)
?count
market <- read.csv("market.dxy.csv")
View(market)
market <- read.csv("market.dxy.csv")
market1 <- split(market,as.factor(market$Zip))
market2 <- ldply(market1,nrow)
View(market2)
View(market1)
market3 <- split(market,as.factor(market$Zip,market$Type))
market3 <- split(market1,as.factor(market$Type))
View(market3)
market1 <- split(market,as.factor(market$Zip))
market3 <- split(market1,as.factor(market$Type))
market2 <- sort(market2$V1)
market1 <- split(market,as.factor(market$Zip))
market2 <- ldply(market1,nrow)
View(market2)
market2 <- market2[sort(market2$V1),]
sort(market2$V1)
?sort
market1 <- split(market,as.factor(market$Zip))
market2 <- ldply(market1,nrow)
market1 <- split(market,as.factor(market$Zip))
market2 <- ldply(market1,nrow)
order(market2$V1)
market2 <- market2[order(market2$V1),]
?order
market1 <- split(market,as.factor(market$Zip))
market2 <- ldply(market1,nrow)
market2 <- market2[order(market2$V1,decreasing = TRUE),]
market2 <- ldply(market1,nrow)
market2 <- market2[order(market2$V1,decreasing = TRUE),]
f <- c(as.factor(market$Zip),as.factor(market$Type))
market3 <- split(market,f)
factor(market$Zip)
f <- c(factor(market$Zip),factor(market$Type))
market3 <- split(market,f)
market3 <- split(market,list(factor(market$Zip),factor(market$Type)))
source('C:/Users/dingx/Desktop/count.R', echo=TRUE)
market1 <- split(market,factor(market$Zip))
market2 <- ldply(market1,nrow)
market2 <- market2[order(market2$V1,decreasing = TRUE),]
market3 <- split(market,list(factor(market$Zip),factor(market$Type)))
market3 <- split(market,list(market$Zip,market$Type))
market3 <- split(market,list(market$Zip,market$Type))
market3 <- split(market,list(market$Zip,market$Type))
runApp('~/GitHub/Spring2018-Project2-group3/app')
install.packages("choroplethrZip")
runApp('~/GitHub/Spring2018-Project2-group3/app')
runApp('~/GitHub/Spring2018-Project2-group3/app')
runApp('~/GitHub/Spring2018-Project2-group3/app')
install.packages("choroplethrZip")
if (!require("choroplethr")) install.packages("choroplethr")
if (!require("devtools")) install.packages("devtools")
library(devtools)
if (!require("choroplethrZip"))
devtools::install_github('arilamstein/choroplethrZip@v1.5.0')
if (!require("ggplot2")) devtools::install_github("hadley/ggplot2")
if (!require("ggmap")) devtools::install_github("dkahle/ggmap")
library(if (!require("choroplethr")) install.packages("choroplethr")
if (!require("devtools")) install.packages("devtools")
library(devtools)
if (!require("choroplethrZip"))
devtools::install_github('arilamstein/choroplethrZip@v1.5.0')
if (!require("ggplot2")) devtools::install_github("hadley/ggplot2")
if (!require("ggmap")) devtools::install_g
runApp('~/GitHub/Spring2018-Project2-group3/app')
library(leaflet)
install.packages("leaflet")
library(leaflet)
runApp('~/GitHub/Spring2018-Project2-group3/app')
runApp('~/GitHub/Spring2018-Project2-group3/app')
market3 <- split(market,list(market$Zip,market$Type))
source('C:/Users/dingx/Desktop/count.R', echo=TRUE)
# f <- c(factor(market$Zip),factor(market$Type))
%>%
market4 <- ldply(market1,nrow)
runApp('~/GitHub/Spring2018-Project2-group3/app')
